#include <stdio.h>
#include <time.h>

int max(int a, int b) {
    return (a > b) ? a : b;
}

int knapsack(int W, int wt[], int val[], int n) {
    int dp[n + 1][W + 1];

    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= W; w++) {
            if (i == 0 || w == 0)
                dp[i][w] = 0;
            else if (wt[i - 1] <= w)
                dp[i][w] = max(val[i - 1] + dp[i - 1][w - wt[i - 1]], dp[i - 1][w]);
            else
                dp[i][w] = dp[i - 1][w];
        }
    }
    return dp[n][W];
}

int main() {
    int n, W;

    printf("Enter number of items: ");
    scanf("%d", &n);

    int val[n], wt[n];

    printf("Enter value and weight of each item:\n");
    for (int i = 0; i < n; i++)
        scanf("%d %d", &val[i], &wt[i]);

    printf("Enter capacity of knapsack: ");
    scanf("%d", &W);

    clock_t start = clock();  // start timer

    int result = knapsack(W, wt, val, n);

    clock_t end = clock();  // end timer
    double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;

    printf("Maximum value in knapsack = %d\n", result);
    printf("Execution time: %.6f seconds\n", time_taken);

    return 0;
}
